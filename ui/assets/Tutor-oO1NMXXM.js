import{j as c}from"./jsx-runtime-CkxqCPlQ.js";import{r as m}from"./index-DJO9vBfz.js";import{A as q}from"./Action-DcFBsC7h.js";import"./Answer-BBzPdijR.js";import{B as P}from"./Button-BFim8KLb.js";import"./Chat-DbB_edh2.js";import"./Icon-CA65L85m.js";import{I as ee}from"./Input-CtlMo02g.js";import"./Menu-C_SWLeMl.js";import"./Message-B84R2Yj4.js";import"./ProgressBar-DvhAnra0.js";import"./Smartik-rCPOZ_vc.js";import{u as h,f as E,g as O,r as te,i as ae,h as ne,j,k as re,l as ie,m as se,n as oe,o as ce,q as F,t as pe,v as le,w as de,x as me,y as $,z as _,A as b,a as v,B as ue,D as xe,U as ye,E as ke}from"./UI-CCDgg16s.js";import{n as H}from"./redux-toolkit.modern-DEr0YuQG.js";import{A as ve}from"./index-tP14o_tB.js";import{m as ge}from"./mapValues-CYm3v0Bi.js";import{i as he,c as fe,m as I,M as be}from"./MemoCards-Dk9QAYYD.js";import{b as we,a as Ae}from"./_baseForOwn-CjMoZcZF.js";import{m as Se}from"./proxy-Bu-Muats.js";function Ie(e,a,t){var n;return t(e,function(r,p,i){if(a(r,p,i))return n=p,!1}),n}function qe(e,a){return Ie(e,we(a),Ae)}const K=({text:e,onSubmit:a})=>c.jsx(q,{children:c.jsx(P,{variant:"answer-send",onClick:a,children:e})});K.__docgenInfo={description:"",methods:[],displayName:"ActionAction",props:{text:{required:!0,tsType:{name:"string"},description:""}}};const W=({onSubmit:e})=>{const a=h(),[t,n]=m.useState(),r=()=>{t&&(a(E({id:`input-${H(4)}`,answer:[{variant:"default",text:t}]})),e(t))};return c.jsx(q,{onSubmit:r,children:c.jsx(ee,{autoFocus:!0,value:"",label:"Введи ответ",onChange:n})})};W.__docgenInfo={description:"",methods:[],displayName:"InputAction",props:{onSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""}}};const B=({options:e,onSubmit:a})=>{const t=h(),[n,r]=m.useState(),p=i=>{const{value:o}=i||n||{};typeof o>"u"||(t(E({id:`${o}-${H(4)}`,answer:e.map(x=>({variant:x===n?"correct":"default",text:x.text}))})),a(o))};return c.jsx(q,{onSubmit:e.length>1?p:void 0,children:e.map((i,o)=>c.jsx(P,{variant:e.length===1?"answer-send":"answer",isPressed:i===n,onClick:e.length===1?()=>p(i):()=>r(i),children:c.jsx("div",{dangerouslySetInnerHTML:{__html:Array.isArray(i.text)?i.text.join("<br>"):i.text}})},o))})};B.__docgenInfo={description:"",methods:[],displayName:"SelectAction",props:{options:{required:!0,tsType:{name:"SelectEvent['options']",raw:"SelectEvent['options']"},description:""},onSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: SelectOption['value']) => void",signature:{arguments:[{type:{name:"SelectEvent['options'][number]['value']",raw:"SelectOption['value']"},name:"value"}],return:{name:"void"}}},description:""}}};const L=({variant:e,prop:a,text:t,options:n,next:r,onSubmit:p})=>{const i=h(),o=x=>{a&&typeof x<"u"&&i(O({[a]:x})),i(te()),p(r)};return c.jsxs(ve,{children:[e==="action"&&c.jsx(K,{text:t,onSubmit:o}),e==="input"&&c.jsx(W,{onSubmit:o}),e==="select"&&c.jsx(B,{options:n,onSubmit:o})]})};L.__docgenInfo={description:"",methods:[],displayName:"Action",props:{variant:{required:!0,tsType:{name:"union",raw:"'action' | 'input' | 'select'",elements:[{name:"literal",value:"'action'"},{name:"literal",value:"'input'"},{name:"literal",value:"'select'"}]},description:""},prop:{required:!1,tsType:{name:"string"},description:""},text:{required:!1,tsType:{name:"string"},description:""},next:{required:!1,tsType:{name:"union",raw:"'begin' | string",elements:[{name:"literal",value:"'begin'"},{name:"string"}]},description:""},options:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ value: Primitive; text: Text }",signature:{properties:[{key:"value",value:{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0}},{key:"text",value:{name:"union",raw:"string | string[]",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"}],required:!0}}]}}],raw:"{ value: Primitive; text: Text }[]"},description:""},onSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:"(next?: EventId) => void",signature:{arguments:[{type:{name:"union",raw:"'begin' | string",elements:[{name:"literal",value:"'begin'"},{name:"string"}]},name:"next"}],return:{name:"void"}}},description:""}}};const Ee={intro:{type:"progress",sections:[{prefix:"intro",title:"Вводный урок: вступление"},{prefix:"trainer1",title:"Вводный урок: кормим дракона"},{prefix:"trainer2",title:"Вводный урок: расследуем"},{prefix:"trainer3",title:"Вводный урок: летим в космос"}],activeSection:0,next:"intro-guestGreeting"},"intro-guestGreeting":{type:"message",text:["Ничего себе, у меня сегодня гости!","Добро пожаловать! Как тебя зовут?"],next:"intro-askName"},"intro-askName":{type:"input",prop:"name",next:"intro-greetUser",delay:1e3},"intro-greetUser":{type:"message",text:["Очень приятно познакомиться, {name}!","Меня зовут Смартик, и я очень люблю математику. Ты знаешь, что она на самом деле нужна вообще где угодно?"],next:"intro-checkKnowledge"},"intro-checkKnowledge":{type:"select",prop:"doYouKnow",options:[{value:"knowsIt",text:"Конечно, знаю!"},{value:"unsure",text:"Прям вообще-вообще?"},{value:"dislikesMath",text:["И зачем мне это знать?","Мне математика не нравится!"]}],next:"intro-branchKnowledge",delay:1e3},"intro-branchKnowledge":{type:"fork",matchers:[{predicates:[{prop:"doYouKnow",fn:"isEqual",value:"knowsIt"}],next:"intro-responseKnows"},{predicates:[{prop:"doYouKnow",fn:"isEqual",value:"unsure"}],next:"intro-responseUnsure"},{predicates:[{prop:"doYouKnow",fn:"isEqual",value:"dislikesMath"}],next:"intro-responseDislikes"}]},"intro-responseKnows":{type:"message",text:"Приятно видеть знающего человека!",next:"intro-inviteTravel"},"intro-responseUnsure":{type:"message",text:"Вообще-вообще!",next:"intro-inviteTravel"},"intro-responseDislikes":{type:"message",text:["Понимаю! Когда-то мне она тоже не нравилась...","Но я просто не знал, какой интересной она может быть!"],next:"intro-inviteTravel"},"intro-inviteTravel":{type:"message",text:["Я предлагаю нам с тобой отправиться в путешествие и немного поиграть.","Абсолютно уверен, что где бы мы ни оказались, математика нам там пригодится."],next:"intro-introduceGames"},"intro-introduceGames":{type:"message",text:["У меня есть три замечательных игры.","Предлагаю тебе выбрать одну из них... Но, думаю, будет веселее, если я не стану заранее их показывать."],next:"intro-attachCardSelect"},"intro-attachCardSelect":{type:"attachInteractive",name:"CardSelect",props:{blockFlipping:!0,blockActivating:!0,cards:[{id:"card1",image:"/dragon.png"},{id:"card2",image:"/dragon.png"},{id:"card3",image:"/dragon.png"}]},triggers:{init:{next:"intro-enableFlipping"},flip:{next:"intro-blockFlipping"},activate:{next:"trainer1-stylesSetup"}}},"intro-enableFlipping":{type:"interactiveAction",name:"setState",payload:{blockFlipping:!1},next:"intro-flipPrompt"},"intro-flipPrompt":{type:"message",text:"Переверни одну из карт, и мы узнаем, какая игра будет первой!"},"intro-blockFlipping":{type:"interactiveAction",name:"setState",payload:{blockFlipping:!0},next:"trainer1-previewSetup"},"intro-handleFlip":{type:"interactiveAction",name:"setState",payload:{blockFlipping:!0}}},je={"trainer1-1-idle":{type:"fork",matchers:[{predicates:[{prop:"memo1picked3",fn:"!isEqual",value:!0}],next:"trainer1-1-idle-shake3"},{predicates:[{prop:"memo1picked6",fn:"!isEqual",value:!0}],next:"trainer1-1-idle-shake6"},{predicates:[{prop:"memo1picked9",fn:"!isEqual",value:!0}],next:"trainer1-1-idle-shake9"}]},"trainer1-1-idle-shake3":{type:"interactiveAction",name:"shake",payload:["3"],next:"trainer1-1-idle-shake3Stop",delay:600},"trainer1-1-idle-shake3Stop":{type:"interactiveAction",name:"shake",payload:["3"]},"trainer1-1-idle-shake6":{type:"interactiveAction",name:"shake",payload:["6"],next:"trainer1-1-idle-shake6Stop",delay:600},"trainer1-1-idle-shake6Stop":{type:"interactiveAction",name:"shake",payload:["6"]},"trainer1-1-idle-shake9":{type:"interactiveAction",name:"shake",payload:["9"],next:"trainer1-1-idle-shake9Stop",delay:600},"trainer1-1-idle-shake9Stop":{type:"interactiveAction",name:"shake",payload:["9"]}},Ce={"trainer1-1-pick3":{type:"fork",matchers:[{predicates:[{prop:"memo1picked3",fn:"!isEqual",value:!0}],next:"trainer1-1-pick3-context"}]},"trainer1-1-pick3-context":{type:"context",name:"memo1picked3",value:!0,next:"trainer1-1-pick3-message"},"trainer1-1-pick3-message":{type:"message",text:"Конечно! 3 любых предмета мы можем поровну поделить на троих."},"trainer1-1-pick6":{type:"fork",matchers:[{predicates:[{prop:"memo1picked6",fn:"!isEqual",value:!0}],next:"trainer1-1-pick6-context"}]},"trainer1-1-pick6-context":{type:"context",name:"memo1picked6",value:!0,next:"trainer1-1-pick6-message"},"trainer1-1-pick6-message":{type:"message",text:["Да! Число 6 нам подходит.","Раздадим каждой голове по две порции - и готово!"]},"trainer1-1-pick9":{type:"fork",matchers:[{predicates:[{prop:"memo1picked9",fn:"!isEqual",value:!0}],next:"trainer1-1-pick9-context"}]},"trainer1-1-pick9-context":{type:"context",name:"memo1picked9",value:!0,next:"trainer1-1-pick9-message"},"trainer1-1-pick9-message":{type:"message",text:"Отлично! 9 порций продукта можно без проблем поделить поровну на три драконьих головы."},"trainer1-1-pick1":{type:"fork",matchers:[{predicates:[{prop:"memo1tried1",fn:"!isEqual",value:!0}],next:"trainer1-1-pick1-context"},{predicates:[{prop:"memo1tried1",fn:"isEqual",value:!0}],next:"trainer1-1-pick1-shake"}]},"trainer1-1-pick1-context":{type:"context",name:"memo1tried1",value:!0,next:"trainer1-1-pick1-message"},"trainer1-1-pick1-message":{type:"message",text:"Ой, этого хватит только на одну голову, две другие могут расстроиться.",next:"trainer1-1-pick1-shake"},"trainer1-1-pick1-shake":{type:"interactiveAction",name:"shake",payload:["1"],next:"trainer1-1-pick1-shakeStop",delay:600},"trainer1-1-pick1-shakeStop":{type:"interactiveAction",name:"shake",payload:["1"],next:"trainer1-1-pick1-lower"},"trainer1-1-pick1-lower":{type:"interactiveAction",name:"lower",payload:["1"]},"trainer1-1-pick2":{type:"fork",matchers:[{predicates:[{prop:"memo1tried2",fn:"!isEqual",value:!0}],next:"trainer1-1-pick2-context"},{predicates:[{prop:"memo1tried2",fn:"isEqual",value:!0}],next:"trainer1-1-pick2-shake"}]},"trainer1-1-pick2-context":{type:"context",name:"memo1tried2",value:!0,next:"trainer1-1-pick2-message"},"trainer1-1-pick2-message":{type:"message",text:"Боюсь, таким числом продуктов какую-нибудь из голов мы всё-таки обидим.",next:"trainer1-1-pick2-shake"},"trainer1-1-pick2-shake":{type:"interactiveAction",name:"shake",payload:["2"],next:"trainer1-1-pick2-shakeStop",delay:600},"trainer1-1-pick2-shakeStop":{type:"interactiveAction",name:"shake",payload:["2"],next:"trainer1-1-pick2-lower"},"trainer1-1-pick2-lower":{type:"interactiveAction",name:"lower",payload:["2"]},"trainer1-1-pick4":{type:"fork",matchers:[{predicates:[{prop:"memo1tried4",fn:"!isEqual",value:!0}],next:"trainer1-1-pick4-context"},{predicates:[{prop:"memo1tried4",fn:"isEqual",value:!0}],next:"trainer1-1-pick4-shake"}]},"trainer1-1-pick4-context":{type:"context",name:"memo1tried4",value:!0,next:"trainer1-1-pick4-message"},"trainer1-1-pick4-message":{type:"message",text:"Этим мы, конечно, покормим каждую голову, но оставшееся достанется только одной...",next:"trainer1-1-pick4-shake"},"trainer1-1-pick4-shake":{type:"interactiveAction",name:"shake",payload:["4"],next:"trainer1-1-pick4-shakeStop",delay:600},"trainer1-1-pick4-shakeStop":{type:"interactiveAction",name:"shake",payload:["4"],next:"trainer1-1-pick4-lower"},"trainer1-1-pick4-lower":{type:"interactiveAction",name:"lower",payload:["4"]},"trainer1-1-pick5":{type:"fork",matchers:[{predicates:[{prop:"memo1tried5",fn:"!isEqual",value:!0}],next:"trainer1-1-pick5-context"},{predicates:[{prop:"memo1tried5",fn:"isEqual",value:!0}],next:"trainer1-1-pick5-shake"}]},"trainer1-1-pick5-context":{type:"context",name:"memo1tried5",value:!0,next:"trainer1-1-pick5-message"},"trainer1-1-pick5-message":{type:"message",text:"Ой-ой, вот тут-то одной голове не хватит, и она будет очень недовольна!",next:"trainer1-1-pick5-shake"},"trainer1-1-pick5-shake":{type:"interactiveAction",name:"shake",payload:["5"],next:"trainer1-1-pick5-shakeStop",delay:600},"trainer1-1-pick5-shakeStop":{type:"interactiveAction",name:"shake",payload:["5"],next:"trainer1-1-pick5-lower"},"trainer1-1-pick5-lower":{type:"interactiveAction",name:"lower",payload:["5"]},"trainer1-1-pick7":{type:"fork",matchers:[{predicates:[{prop:"memo1tried7",fn:"!isEqual",value:!0}],next:"trainer1-1-pick7-context"},{predicates:[{prop:"memo1tried7",fn:"isEqual",value:!0}],next:"trainer1-1-pick7-shake"}]},"trainer1-1-pick7-context":{type:"context",name:"memo1tried7",value:!0,next:"trainer1-1-pick7-message"},"trainer1-1-pick7-message":{type:"message",text:"Тут еды, конечно, много, но мы не сможем разделить её поровну!",next:"trainer1-1-pick7-shake"},"trainer1-1-pick7-shake":{type:"interactiveAction",name:"shake",payload:["7"],next:"trainer1-1-pick7-shakeStop",delay:600},"trainer1-1-pick7-shakeStop":{type:"interactiveAction",name:"shake",payload:["7"],next:"trainer1-1-pick7-lower"},"trainer1-1-pick7-lower":{type:"interactiveAction",name:"lower",payload:["7"]}},Me={"trainer1-1":{type:"interactiveAction",name:"setState",payload:{validMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"%",args:[3],value:0}]}],completedMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"!%",args:[3],value:0}],next:"completed"}]},next:"trainer1-1-triggers"},"trainer1-1-triggers":{type:"interactiveTriggers",triggers:{elevate:[{predicates:[{prop:"id",fn:"isEqual",value:"3"}],next:"trainer1-1-pick3"},{predicates:[{prop:"id",fn:"isEqual",value:"6"}],next:"trainer1-1-pick6"},{predicates:[{prop:"id",fn:"isEqual",value:"9"}],next:"trainer1-1-pick9"},{predicates:[{prop:"id",fn:"isEqual",value:"1"}],next:"trainer1-1-pick1"},{predicates:[{prop:"id",fn:"isEqual",value:"2"}],next:"trainer1-1-pick2"},{predicates:[{prop:"id",fn:"isEqual",value:"4"}],next:"trainer1-1-pick4"},{predicates:[{prop:"id",fn:"isEqual",value:"5"}],next:"trainer1-1-pick5"},{predicates:[{prop:"id",fn:"isEqual",value:"7"}],next:"trainer1-1-pick7"}],completed:{next:"trainer1-1-discard"}},next:"trainer1-1-serve"},"trainer1-1-serve":{type:"interactiveAction",name:"serve",payload:{count:8},next:"trainer1-1-watcher",delay:1e3},"trainer1-1-watcher":{type:"addWatcher",name:"memo1",matchers:[{predicates:[{prop:"memo1picked3",fn:"isEqual",value:!0},{prop:"memo1picked6",fn:"isEqual",value:!0},{prop:"memo1picked9",fn:"isEqual",value:!0}],strategy:"and",next:"trainer1-1-removeIdle",delay:1e3}],next:"trainer1-1-intro1"},"trainer1-1-intro1":{type:"message",text:"Сейчас нам предстоит нелёгкое дело кормления королевского дракона.",next:"trainer1-1-intro2"},"trainer1-1-intro2":{type:"message",text:"А нелёгкое оно, потому что все три его головы очень обидчивые — не стерпят, если какой-то из них достанется меньше еды.",next:"trainer1-1-highlight"},"trainer1-1-highlight":{type:"interactiveAction",name:"highlight",payload:["5"],next:"trainer1-1-intro3"},"trainer1-1-intro3":{type:"message",text:"На картах указано количество продуктов.",next:"trainer1-1-highlight1"},"trainer1-1-highlight1":{type:"interactiveAction",name:"highlight",payload:["5"],next:"trainer1-1-intro4"},"trainer1-1-intro4":{type:"message",text:"Всё это дракон очень любит! Но не каждая карта нам подойдёт!",next:"trainer1-1-choose"},"trainer1-1-choose":{type:"message",text:"Выбери только те карты, где продукты можно поровну поделить на троих.",next:"trainer1-1-addIdle"},"trainer1-1-addIdle":{type:"addIdle",name:"memo1Idle",idle:{next:"trainer1-1-idle",delay:15e3}},"trainer1-1-removeIdle":{type:"removeIdle",name:"memo1Idle",next:"trainer1-1-action"},"trainer1-1-action":{type:"action",action:{text:"Покормить дракона!",next:"trainer1-1-select"}},"trainer1-1-select":{type:"interactiveAction",name:"select",next:"trainer1-1-validate",delay:1e3},"trainer1-1-validate":{type:"interactiveAction",name:"setState",payload:{validate:"selected"}},"trainer1-1-discard":{type:"interactiveAction",name:"discard",next:"trainer1-intermission"}},Te={"trainer1-2-explanation":{type:"interactiveAction",name:"discard",next:"trainer1-2-explanation1"},"trainer1-2-explanation1":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-explanation-intro"},"trainer1-2-explanation-intro":{type:"message",text:"Сейчас я расскажу тебе секрет, как найти все нужные нам числа.",next:"trainer1-2-explanation-1"},"trainer1-2-explanation-1":{type:"interactiveAction",name:"serve",payload:["3","6","9"],next:"trainer1-2-explanation-1-message"},"trainer1-2-explanation-1-message":{type:"message",text:["Вот эти числа мы точно можем поделить на три равные части.","Можно мысленно представить нужное количество и поделить его."],next:"trainer1-2-explanation-1-discard"},"trainer1-2-explanation-1-discard":{type:"interactiveAction",name:"discard",next:"trainer1-2-explanation-2"},"trainer1-2-explanation-2":{type:"interactiveAction",name:"serve",payload:["122","231"],next:"trainer1-2-explanation-2-message"},"trainer1-2-explanation-2-message":{type:"message",text:"А что делать с вот такими числами? Их представить уже сложнее.",next:"trainer1-2-explanation-3-discard"},"trainer1-2-explanation-3-discard":{type:"interactiveAction",name:"discard",next:"trainer1-2-explanation-3"},"trainer1-2-explanation-3":{type:"message",text:"Но сейчас мы будем делать математическую магию!",next:"trainer1-2-explanation-4"},"trainer1-2-explanation-4":{type:"message",text:["Сложи все цифры, из которых состоит это число.","Введи то, что у тебя получилось."],next:"trainer1-2-explanation-4-input"},"trainer1-2-explanation-4-input":{type:"input",prop:"memo2explanationInput1",next:"trainer1-2-explanation-4-fork"},"trainer1-2-explanation-4-fork":{type:"fork",matchers:[{predicates:[{prop:"memo2explanationInput1",fn:"isEqual",value:"6"}],next:"trainer1-2-explanation-4-correct"},{predicates:[{prop:"memo2explanationInput1",fn:"!isEqual",value:"6"}],next:"trainer1-2-explanation-4-incorrect"}]},"trainer1-2-explanation-4-correct":{type:"message",text:"Верно! Сумма всех цифр равна 6.",next:"trainer1-2-explanation-5"},"trainer1-2-explanation-4-incorrect":{type:"message",text:"На самом деле сумма всех цифр равна 6.",next:"trainer1-2-explanation-5"},"trainer1-2-explanation-5":{type:"message",text:"Можем ли мы поделить 6 золотых монет поровну между 3 людьми?",next:"trainer1-2-explanation-5-select"},"trainer1-2-explanation-5-select":{type:"select",prop:"memo2explanationInput2",options:[{value:"yes",text:"Можем"},{value:"no",text:"Не можем"}],next:"trainer1-2-explanation-5-answer"},"trainer1-2-explanation-5-answer":{type:"message",text:"Число 6 отлично делится на три равные части.",next:"trainer1-2-explanation-6"},"trainer1-2-explanation-6":{type:"message",text:"Значит, и наше число 231 делится на три!",next:"trainer1-2-explanation-7"},"trainer1-2-explanation-7":{type:"message",text:"Мы узнали замечательное магическое правило про деление на 3!",next:"trainer1-3"}},Ne={"trainer1-2-help":{type:"fork",matchers:[{predicates:[{prop:"memo2helpOffered",fn:"isEqual",value:!0}],next:"trainer1-2-explanation"},{predicates:[{prop:"memo2helpOffered",fn:"!isEqual",value:!0}],next:"trainer1-2-removeIdle"}]},"trainer1-2-removeIdle":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-help-context"},"trainer1-2-help-context":{type:"context",name:"memo2helpOffered",value:!0,next:"trainer1-2-help-message"},"trainer1-2-help-message":{type:"message",text:["Эти числа довольно большие...","Но не переживай! Хочешь, я помогу тебе?"],next:"trainer1-2-help-select"},"trainer1-2-help-select":{type:"select",prop:"memo2needHelp",options:[{value:"yes",text:"Да, мне бы здесь пригодилась твоя помощь"},{value:"no",text:"Нет, хочу попробовать решить самостоятельно"}],next:"trainer1-2-help-forkHelp"},"trainer1-2-help-forkHelp":{type:"fork",matchers:[{predicates:[{prop:"memo2needHelp",fn:"isEqual",value:"yes"}],next:"trainer1-2-explanation"},{predicates:[{prop:"memo2needHelp",fn:"isEqual",value:"no"}],next:"trainer1-2-help-noNeed"}]},"trainer1-2-help-noNeed":{type:"message",text:["Хорошо!","Можешь обратиться ко мне в любой момент!","Просто нажми на эту кнопку, если тебе понадобится помощь:"],next:"trainer1-2-help-button"},"trainer1-2-help-button":{type:"help",help:"trainer1-2-explanation",next:"trainer1-2-help-action"},"trainer1-2-help-action":{type:"action",action:{text:"Покормить дракона!",next:"trainer1-2-select"}},"trainer1-2-help-addIdle":{type:"addIdle",name:"memo2idle",idle:{next:"trainer1-2-help-removeIdle",delay:5e3}},"trainer1-2-help-removeIdle":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-explanation"}},De={"trainer1-2":{"trainer1-1":null,type:"interactiveAction",name:"setState",payload:{validMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"%",args:[3],value:0}],next:"cardsLeft"}],invalidMatchers:[{predicates:[{prop:"[some].numeral.count",fn:"!%",args:[3],value:0}],next:"invalidCards"}],completedMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"!%",args:[3],value:0}],next:"completed"}]},next:"trainer1-2-triggers"},"trainer1-2-triggers":{type:"interactiveTriggers",triggers:{cardsLeft:{next:"trainer1-2-cardsLeft"},invalidCards:{next:"trainer1-2-invalidCards"},completed:{next:"trainer1-2-discard"}},next:"trainer1-2-serve"},"trainer1-2-serve":{type:"interactiveAction",name:"serve",payload:{count:8},next:"trainer1-2-intro"},"trainer1-2-intro":{type:"message",text:"Здесь продуктов уже гораздо больше, дракон точно не останется голоден.",next:"trainer1-2-intro1"},"trainer1-2-intro1":{type:"message",text:"Выбери все карты, где продукты можно поделить на троих.",next:"trainer1-2-addIdle"},"trainer1-2-addIdle":{type:"addIdle",name:"memo2idle",idle:{next:"trainer1-2-help",delay:3e4},next:"trainer1-2-action"},"trainer1-2-action":{type:"action",action:{text:"Покормить дракона!",next:"trainer1-2-select"}},"trainer1-2-select":{type:"interactiveAction",name:"select",next:"trainer1-2-validate",delay:1e3},"trainer1-2-validate":{type:"interactiveAction",name:"setState",payload:{validate:"selected"}},"trainer1-2-invalidCards":{type:"fork",matchers:[{predicates:[{prop:"memo2mistake",fn:"!isEqual",value:!0}],next:"trainer1-2-invalidCardsMessage"},{predicates:[{prop:"memo2mistake",fn:"isEqual",value:!0}],next:"trainer1-2-invalidCardsMessage1"}]},"trainer1-2-invalidCardsMessage":{type:"message",text:["Упс... Кажется, тут есть карты, из-за которых драконьи головы очень расстроятся.","Попробуй еще раз."],next:"trainer1-2-mistake"},"trainer1-2-invalidCardsMessage1":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-explanation"},"trainer1-2-cardsLeft":{type:"fork",matchers:[{predicates:[{prop:"memo2mistake",fn:"!isEqual",value:!0}],next:"trainer1-2-cardsLeftMessage"},{predicates:[{prop:"memo2mistake",fn:"isEqual",value:!0}],next:"trainer1-2-cardsLeftMessage1"}]},"trainer1-2-cardsLeftMessage":{type:"message",text:["Нужно выбрать все-все подходящие карты.","Посмотри: кажется, что-то ещё осталось."],next:"trainer1-2-mistake"},"trainer1-2-cardsLeftMessage1":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-explanation"},"trainer1-2-mistake":{type:"context",name:"memo2mistake",value:!0,next:"trainer1-2-action"},"trainer1-2-discard":{type:"interactiveAction",name:"discard",payload:"all",next:"trainer1-2-discard1"},"trainer1-2-discard1":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-success"},"trainer1-2-success":{type:"message",text:"Потрясающе!",next:"trainer1-2-success1"},"trainer1-2-success1":{type:"message",text:"Похоже, ты знаешь хитрый способ находить числа, которые делятся на 3?",next:"trainer1-2-success2"},"trainer1-2-success2":{type:"removeIdle",name:"memo2idle",next:"trainer1-2-knowsDivision"},"trainer1-2-knowsDivision":{type:"select",prop:"knowsDivision",options:[{value:"yes",text:"Да, именно его мне и пришлось использовать."},{value:"no",text:"Нет, у меня получилось выбрать наугад. Расскажи!"}],next:"trainer1-2-knowsFork"},"trainer1-2-knowsFork":{type:"fork",matchers:[{predicates:[{prop:"knowsDivision",fn:"isEqual",value:"yes"}],next:"trainer1-2-knows"},{predicates:[{prop:"knowsDivision",fn:"isEqual",value:"no"}],next:"trainer1-2-explanation"}]},"trainer1-2-knows":{type:"message",text:"Ого! Я восхищён тем, что тебе известно магическое правило про деление на 3!",next:"trainer1-2-knows1"},"trainer1-2-knows1":{type:"message",text:"Ну что ж, похоже, дракон накормлен, и мы можем переходить к следующей игре."}},_e={"trainer1-3-pick72":{type:"fork",matchers:[{predicates:[{prop:"memo3picked72",fn:"!isEqual",value:!0}],next:"trainer1-3-pick72-context"}]},"trainer1-3-pick72-context":{type:"context",name:"memo3picked72",value:!0,next:"trainer1-3-pick72-message"},"trainer1-3-pick72-message":{type:"message",text:["Отлично!","Сумма цифр на этой карте:","7 + 2 = 9","9 делится на 3, карта подходит!"]},"trainer1-3-pick102":{type:"fork",matchers:[{predicates:[{prop:"memo3picked102",fn:"!isEqual",value:!0}],next:"trainer1-3-pick102-context"}]},"trainer1-3-pick102-context":{type:"context",name:"memo3picked102",value:!0,next:"trainer1-3-pick102-message"},"trainer1-3-pick102-message":{type:"message",text:["Ты замечательно справляешься!","Сумма цифр на этой карте:","1 + 0 + 2 = 3","3 делится на 3, эту карту мы берём!"]},"trainer1-3-pick43":{type:"fork",matchers:[{predicates:[{prop:"memo3tried43",fn:"!isEqual",value:!0}],next:"trainer1-3-pick43-context"},{predicates:[{prop:"memo3tried43",fn:"isEqual",value:!0}],next:"trainer1-3-pick43-shake"}]},"trainer1-3-pick43-context":{type:"context",name:"memo3tried43",value:!0,next:"trainer1-3-pick43-message"},"trainer1-3-pick43-message":{type:"message",text:["Смотри-ка, какая сумма цифр у числа 43?","4 + 3 = 7","7 не делится на 3, эта карта нам не подходит."],next:"trainer1-3-pick43-shake"},"trainer1-3-pick43-shake":{type:"interactiveAction",name:"shake",payload:["43"],next:"trainer1-3-pick43-shakeStop",delay:600},"trainer1-3-pick43-shakeStop":{type:"interactiveAction",name:"shake",payload:["43"],next:"trainer1-3-pick43-lower"},"trainer1-3-pick43-lower":{type:"interactiveAction",name:"lower",payload:["43"]},"trainer1-3-pick301":{type:"fork",matchers:[{predicates:[{prop:"memo3tried301",fn:"!isEqual",value:!0}],next:"trainer1-3-pick301-context"},{predicates:[{prop:"memo3tried301",fn:"isEqual",value:!0}],next:"trainer1-3-pick301-shake"}]},"trainer1-3-pick301-context":{type:"context",name:"memo3tried301",value:!0,next:"trainer1-3-pick301-message"},"trainer1-3-pick301-message":{type:"message",text:["Давай посчитаем сумму цифр у числа 301:","3 + 0 + 1 = 4","4 не делится на 3, эту карту лучше оставить."],next:"trainer1-3-pick301-shake"},"trainer1-3-pick301-shake":{type:"interactiveAction",name:"shake",payload:["301"],next:"trainer1-3-pick301-shakeStop",delay:600},"trainer1-3-pick301-shakeStop":{type:"interactiveAction",name:"shake",payload:["301"],next:"trainer1-3-pick301-lower"},"trainer1-3-pick301-lower":{type:"interactiveAction",name:"lower",payload:["301"]}},Pe={"trainer1-3":{type:"interactiveTriggers",triggers:{elevate:[{predicates:[{prop:"id",fn:"isEqual",value:"72"}],next:"trainer1-3-pick72"},{predicates:[{prop:"id",fn:"isEqual",value:"43"}],next:"trainer1-3-pick43"},{predicates:[{prop:"id",fn:"isEqual",value:"301"}],next:"trainer1-3-pick301"},{predicates:[{prop:"id",fn:"isEqual",value:"102"}],next:"trainer1-3-pick102"}],completed:{next:"trainer1-3-discard"}},next:"trainer1-3-state"},"trainer1-3-state":{type:"interactiveAction",name:"setState",payload:{validMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"%",args:[3],value:0}]}],completedMatchers:[{predicates:[{prop:"[every].numeral.count",fn:"!%",args:[3],value:0}],next:"completed"}]},next:"trainer1-3-addIdle"},"trainer1-3-addIdle":{type:"addIdle",name:"memo3idle",idle:{next:"trainer1-3-idle",delay:3e4,once:!0},next:"trainer1-3-watcher"},"trainer1-3-watcher":{type:"addWatcher",name:"memo3",matchers:[{predicates:[{prop:"memo3picked72",fn:"isEqual",value:!0},{prop:"memo3picked102",fn:"isEqual",value:!0}],strategy:"and",next:"trainer1-3-action",delay:1e3}],next:"trainer1-3-serve"},"trainer1-3-serve":{type:"interactiveAction",name:"serve",payload:["72","43","301","102"],next:"trainer1-3-intro"},"trainer1-3-intro":{type:"message",text:["Теперь ты можешь выполнить задание самостоятельно!","Нам нужно выбрать всего лишь из 4 карт."]},"trainer1-3-idle":{type:"message",text:"Я в любой момент могу помочь найти ответ, если у тебя возникнут трудности!",next:"trainer1-3-removeIdle"},"trainer1-3-removeIdle":{type:"removeIdle",name:"memo3idle",next:"trainer1-3-help"},"trainer1-3-help":{type:"help",help:"trainer1-3-askHelp",next:"trainer1-3-addIdle-2"},"trainer1-3-addIdle-2":{type:"addIdle",name:"memo3idle",idle:{next:"trainer1-3-reveal",delay:3e4,once:!0}},"trainer1-3-askHelp":{type:"message",text:"Конечно, никаких проблем!",next:"trainer1-3-reveal"},"trainer1-3-reveal":{type:"interactiveAction",name:"select",payload:["72","102"],next:"trainer1-3-revealMessage"},"trainer1-3-revealMessage":{type:"message",text:"Нам подходят два числа: 72 и 102. Если хочешь, можешь затем проверить сумму их цифр.",next:"trainer1-3-revealDiscard",delay:1e3},"trainer1-3-revealDiscard":{type:"interactiveAction",name:"discard",next:"trainer1-sticker"},"trainer1-3-success":{type:"message",text:"Отлично! Отправляемся кормить дракона!",next:"trainer1-3-success1"},"trainer1-3-success1":{type:"removeIdle",name:"memo3idle",next:"trainer1-3-action"},"trainer1-3-action":{type:"action",action:{text:"Покормить дракона!",next:"trainer1-3-select"}},"trainer1-3-select":{type:"interactiveAction",name:"select",next:"trainer1-3-validate",delay:1e3},"trainer1-3-validate":{type:"interactiveAction",name:"setState",payload:{validate:!0},next:"trainer1-3-removeIdlePlease"},"trainer1-3-removeIdlePlease":{type:"removeIdle",name:"memo3idle"},"trainer1-3-discard":{type:"interactiveAction",name:"discard",next:"trainer1-3-congrats"},"trainer1-3-congrats":{type:"message",text:"Как же у тебя здорово вышло!",next:"trainer1-sticker"}},Oe={"trainer1-previewSetup":{type:"styles",styles:{container:{className:"before:bg-[url(/memocards-bg.jpg)] before:opacity-25"}},next:"trainer1-startMessage",delay:1e3},"trainer1-startMessage":{type:"message",text:["Прекрасный выбор!","Значит, первым делом нас ждёт путешествие в далёкое-далёкое королевство...","Интересно, а там кому-нибудь нужна математика?"],next:"trainer1-checkMathNeed"},"trainer1-checkMathNeed":{type:"select",prop:"isMathNeeded",options:[{value:"mathNeeded",text:"Конечно, нужна."},{value:"mathNotNeeded",text:"Я думаю, что нет."},{value:"mathUnsure",text:"Не знаю..."}],next:"trainer1-disableActivating",delay:1e3},"trainer1-disableActivating":{type:"interactiveAction",name:"setState",payload:{blockActivating:!1},next:"trainer1-adventureInvite"},"trainer1-adventureInvite":{type:"message",text:["А вот давай отправимся туда и сами всё увидим!","Нажми на карту, чтобы начать путешествие."]},"trainer1-stylesSetup":{type:"styles",styles:{container:{className:"before:bg-[url(/memocards-bg.jpg)] before:opacity-100"}},next:"trainer1-continueAdventure"},"trainer1-continueAdventure":{type:"interactiveAction",name:"setState",payload:{blockActivating:!0},next:"trainer1-detachInteractive",delay:1e3},"trainer1-detachInteractive":{type:"detachInteractive",next:"trainer1-announcePet"},"trainer1-announcePet":{type:"message",text:"Говорят, у короля есть один очень интересный питомец...",next:"trainer1-choosePet"},"trainer1-choosePet":{type:"select",prop:"wowDragon",options:[{value:"dragonOption1",text:"Ого, это же ДРАКОН!"},{value:"dragonOption2",text:"Хочу себе такого же питомца!"},{value:"dragonOption3",text:"И как король его не боится?"}],next:"trainer1-branchPetChoice",delay:1e3},"trainer1-branchPetChoice":{type:"fork",matchers:[{predicates:[{prop:"wowDragon",fn:"isEqual",value:"dragonOption1"}],next:"trainer1-responseDragon1"},{predicates:[{prop:"wowDragon",fn:"isEqual",value:"dragonOption2"}],next:"trainer1-responseDragon2"},{predicates:[{prop:"wowDragon",fn:"isEqual",value:"dragonOption3"}],next:"trainer1-responseDragon3"}]},"trainer1-responseDragon1":{type:"message",text:["Именно так! Король смог приручить настоящего дракона...","Однако подобных питомцев нужно очень хорошо кормить."],next:"trainer1-startMemo"},"trainer1-responseDragon2":{type:"message",text:["Приручить дракона - дело сложное.","Но ещё сложнее такого питомца прокормить."],next:"trainer1-startMemo"},"trainer1-responseDragon3":{type:"message",text:["Прирученный дракон совсем не опасен...","...пока он хорошо накормлен и доволен."],next:"trainer1-startMemo"},"trainer1-startMemo":{type:"attachInteractive",name:"MemoCards",props:{cards:[{id:"122",status:"decked",numeral:{object:"apples",count:122}},{id:"43",status:"decked",numeral:{object:"carrots",count:43}},{id:"301",status:"decked",numeral:{object:"oranges",count:301}},{id:"98",status:"decked",numeral:{object:"carrots",count:98}},{id:"72",status:"decked",numeral:{object:"corn",count:72}},{id:"83",status:"decked",numeral:{object:"oranges",count:83}},{id:"231",status:"decked",numeral:{object:"apples",count:231}},{id:"102",status:"decked",numeral:{object:"corn",count:102}},{id:"4",status:"decked",numeral:{object:"pumpkin",count:4,countable:!0}},{id:"6",status:"decked",numeral:{object:"orange",count:6,countable:!0}},{id:"1",status:"decked",numeral:{object:"strawberry",count:1,countable:!0}},{id:"9",status:"decked",numeral:{object:"bread",count:9,countable:!0}},{id:"7",status:"decked",numeral:{object:"orange",count:7,countable:!0}},{id:"3",status:"decked",numeral:{object:"strawberry",count:3,countable:!0}},{id:"2",status:"decked",numeral:{object:"bread",count:2,countable:!0}},{id:"5",status:"decked",numeral:{object:"pumpkin",count:5,countable:!0}}]},next:"trainer1-1",delay:1e3},"trainer1-intermission":{type:"message",text:["Молодец! У тебя замечательно получилось накормить дракона и не обидеть ни одну из голов!","Но... что это?"],next:"trainer1-intermission1"},"trainer1-intermission1":{type:"message",text:"Похоже, дракону недостаточно этой еды...",next:"trainer1-2"},"trainer1-sticker":{type:"message",text:"Ну что, время выбирать следующую игру."}},Fe=ge(Object.assign({},Ee,Oe,Me,je,Ce,De,Ne,Te,Pe,_e),(e,a)=>({id:a,...e})),$e=(e,a,t)=>{const{name:n,value:r}=e;a(O({[n]:r})),t(e.next,e.delay)},He=(e,a,t)=>{const{sections:n,activeSection:r}=e;a(ae({sections:n.map(({prefix:p,title:i})=>({prefix:p,title:i,total:Object.keys(Fe).filter(o=>o.includes(p)).length,rate:0,completed:!1})),activeSection:r})),t(e.next,e.delay)},Ke=(e,a,t)=>{const{styles:n}=e;a(ne(n)),t(e.next,e.delay)},We=(e,a,t,n)=>{const{text:r}=e;a(E({id:e.id,text:he(r,n)})),t(e.next,Math.max(fe(r)*200,2e3))},Be=(e,a,t)=>{const{action:n}=e;a(j({variant:"action",...n})),t(e.next,e.delay)},Le=(e,a)=>{const{prop:t}=e;a(j({variant:"input",prop:t}))},Ye=(e,a)=>{const{prop:t,options:n}=e;a(j({variant:"select",prop:t,options:n}))},Ue=(e,a,t)=>{const{name:n,props:r,triggers:p}=e,i=$[n];a(re({component:n,triggers:p})),i&&a(i.actions.setState(r)),t(e.next,e.delay)},Ve=(e,a,t)=>{a(ie()),t(e.next,e.delay)},Re=(e,a,t)=>{const{triggers:n}=e;a(se(n)),t(e.next,e.delay)},Ge=(e,a,t)=>{a(e.payload),t(e.next,e.delay)},ze=(e,a,t,n)=>{var i;const{matchers:r}=e,p=(i=I(r,n))==null?void 0:i[0];p&&t(p.next,e.delay)},Je=(e,a,t)=>{const{name:n,matchers:r}=e;a(oe({name:n,matchers:r})),t(e.next,e.delay)},Qe=(e,a,t)=>{const{url:n,delay:r}=e;a(ce(n,r)),t(e.next,r)},Xe=(e,a,t)=>{const{name:n}=e;a(F(n)),t(e.next,e.delay)},Ze=(e,a,t)=>{const{name:n,idle:r}=e;a(pe({name:n,...r})),t(e.next,e.delay)},et=(e,a,t)=>{a(le(e.name)),t(e.next,e.delay)},tt=(e,a,t)=>{a(de(4e3)),t(e.next,4e3)},at=(e,a,t)=>{const{text:n,help:r}=e;a(me({text:n,next:r})),t(e.next,e.delay)},nt=Object.freeze(Object.defineProperty({__proto__:null,action:Be,addIdle:Ze,addWatcher:Je,attachInteractive:Ue,context:$e,detachInteractive:Ve,fork:ze,help:at,input:Le,interactiveAction:Ge,interactiveTriggers:Re,message:We,progress:He,removeIdle:et,removeWatcher:Xe,select:Ye,showConfetti:tt,showMeme:Qe,styles:Ke},Symbol.toStringTag,{value:"Module"}));function*rt(e,a){let t=e[a];for(;t;){const n=yield t;n&&(t=e[n])}}function it(e,a){if(!a)throw new Error("Scenario is empty");if(!e[a])throw new Error(`Invalid first key: ${a}`)}const st=e=>{const a=m.useRef(),t=h(),[n]=new Map(Object.entries(e)).keys();m.useEffect(()=>{it(e,n),a.current=rt(e,n)},[e,n]);const r=m.useCallback((i,o)=>{var l;if(!i)return;const x=(l=a.current)==null?void 0:l.next(i).value;if(!x)throw new Error(`No event found with id: ${i}`);o?setTimeout(()=>t(_(x)),o):t(_(x))},[t]),p=m.useCallback(()=>r(n),[n,r]);return{next:r,start:p}},Y=({image:e,isFlipped:a,isActivated:t,onClick:n})=>{const r=[];return a&&(r.push("flipped"),t&&r.push("activated")),c.jsxs(b.div,{animate:r,initial:"initial",variants:ot,onClick:n,style:{transformStyle:"preserve-3d"},className:"relative aspect-[210/308] cursor-pointer rounded-xl",children:[c.jsx("div",{className:"absolute h-full w-full rounded-lg bg-[#E9DAD0] p-3",style:{backfaceVisibility:"hidden"},children:c.jsx("div",{className:"background-card-reverse h-full rounded-[4.5px] border-[1.5px] border-[#BAA793] bg-[#D1BFAA]"})}),c.jsx(b.div,{variants:ct,className:"absolute h-full w-full rounded-lg p-1.5 transition duration-500",style:{backfaceVisibility:"hidden",rotateY:180},children:c.jsx("div",{className:"flex h-full items-center justify-center rounded-[7.5px] border-[1.5px] border-[#4C352533] bg-center bg-no-repeat p-5",children:c.jsx("img",{src:e,alt:"",className:"block object-contain"})})})]})},ot={initial:{boxShadow:"0 1.5px 3px 0 #0000004D"},flipped:{rotateY:180,scale:1.1,rotate:3,boxShadow:"0px 6px 24px 0px #00000033",transition:{ease:"anticipate",duration:1}},activated:{scale:[1.1,1.05,1.1],transition:{ease:"easeOut"}}},ct={initial:{background:"linear-gradient(to bottom, #EADFD8 40%, #CBBCAC)"},activated:{background:"white"}};Y.__docgenInfo={description:"",methods:[],displayName:"Card",props:{image:{required:!0,tsType:{name:"string"},description:""},isFlipped:{required:!1,tsType:{name:"boolean"},description:""},isActivated:{required:!1,tsType:{name:"boolean"},description:""}}};const U=({onTrigger:e})=>{const a=v(l=>l.CardSelect.cards),t=v(l=>l.CardSelect.blockFlipping),n=v(l=>l.CardSelect.blockActivating),[r,p]=m.useState(),[i,o]=m.useState(!1),x=l=>{t||(p(l),e("flip",l)),!n&&(r==null?void 0:r.id)===l.id&&(o(!0),e("activate",l))};return c.jsx(ue,{children:c.jsx(b.div,{variants:{visible:{transition:{staggerChildren:.4}}},initial:"initial",animate:"visible",exit:{opacity:0},onAnimationComplete:()=>e("init"),layout:!0,transition:{layout:{type:"tween"}},className:"flex gap-x-9",children:a.map(l=>c.jsx(b.div,{variants:pt,exit:{opacity:0},className:"w-[18vw] xl:w-[210px]",children:c.jsx(Y,{image:l.image,isFlipped:l.id===(r==null?void 0:r.id),isActivated:i,onClick:()=>x(l)})},l.id))})})},pt={initial:{opacity:0,translateY:"200%",scale:1.1},visible:{opacity:1,translateY:0,scale:1}};U.__docgenInfo={description:"",methods:[],displayName:"CardSelect"};const lt=Object.freeze(Object.defineProperty({__proto__:null,CardSelect:U,MemoCards:be},Symbol.toStringTag,{value:"Module"})),dt=({scenario:e})=>{const{start:a,next:t}=st(e),n=h(),r=m.useRef(),p=m.useRef({}),i=v(s=>s.tutor),o=v(s=>s.progress),x=v(s=>s.chat.messages),l=v(s=>s.action),w=v(s=>s.interactive.component),A=v(s=>s.interactive.triggers),V=v(s=>s[w]),d=i.events.at(-1),{actions:C}=$[w]||{},M=m.useCallback(()=>{const s=o.sections[o.activeSection];n(xe(i.events.filter(y=>y.id.includes(s.prefix)).length))},[n,o.activeSection,o.sections,i.events]),T=m.useCallback(()=>{},[t,i.idles]),S=m.useCallback((s,y)=>{const k=Object.values(s).flat();if(!k.length)return;I(k,y).forEach(u=>{const f=qe(s,Z=>Z.includes(u));f&&(n(F(f)),t(u.next,u.delay))})},[n,t]),N=m.useCallback(s=>{const{type:y}=s,k=nt[y];if(!k)throw new Error(`No event handler found for type: ${y}`);let g=n;if(y==="interactiveAction"){const u=C[s.name];g=f=>n(u(f))}if(y==="addIdle"){const{idle:u}=s;p.current[s.name]=setTimeout(()=>{p.current[s.name]&&t(u.next)},u.delay)}if(y==="removeIdle"){const{name:u}=s;clearTimeout(p.current[u]),delete p.current[u]}k(s,g,t,i.context)},[n,C,t,i.context]),R=m.useCallback(s=>{if((d==null?void 0:d.type)==="action"){const{action:y}=d;t(y.next)}else t(s||(d==null?void 0:d.next),d==null?void 0:d.delay)},[d,t]),G=(s,y)=>{var g;const k=A==null?void 0:A[s];if(!k){console.warn(`No trigger found: ${s}`);return}if(Array.isArray(k)){const u=(g=I(k,y))==null?void 0:g[0];u&&t(u.next,u.delay)}else t(k.next,k.delay);T()},z=()=>{var s;i.help&&(n(ke()),t((s=i.help)==null?void 0:s.next))};m.useEffect(()=>{var s;d&&((s=r.current)==null?void 0:s.id)!==d.id&&(N(d),r.current=d,d.type!=="progress"&&M())},[S,d,N,T,M]),m.useEffect(()=>S(i.watchers,i.context),[S,i.context,i.watchers]);const J=o.sections.length>0?{title:o.sections[o.activeSection].title,progress:o.sections}:void 0,Q=l.variant?c.jsx(L,{...l,onSubmit:R}):void 0,D=lt[w],X={...V,onTrigger:G};return c.jsx(Se.div,{initial:{opacity:0},animate:{opacity:1},transition:{delay:.5},onAnimationComplete:a,className:"h-screen w-screen min-w-[1024px]",children:c.jsx(ye,{chat:{messages:x},progressBar:J,action:Q,help:i.help?{...i.help,onClick:z}:void 0,children:D&&c.jsx(D,{...X})})})};dt.__docgenInfo={description:"",methods:[],displayName:"Tutor",props:{scenario:{required:!0,tsType:{name:"Scenario"},description:""}}};export{dt as T};
